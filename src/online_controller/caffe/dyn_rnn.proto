name: "JointStateRegressionNet"

layer {
    name: "data"
    type: "HDF5Data"
    top: "data"
    top: "label"
    top: "clip"
    hdf5_data_param {
        source: "caffe/dyndata_armwave_train.txt"
        batch_size: 50
    }
    include: { phase: TRAIN }
}

layer {
    name: "data"
    type: "HDF5Data"
    top: "data"
    top: "label"
    top: "clip"
    hdf5_data_param {
        source: "caffe/dyndata_armwave_train.txt"
        batch_size: 50
    }
    include: {
    phase: TEST
    stage: 'test-on-train'
    }
}

layer {
    name: "data"
    type: "HDF5Data"
    top: "data"
    top: "label"
    top: "clip"
    hdf5_data_param {
        source: "caffe/dyndata_armwave_test.txt"
        batch_size: 50
    }
    include: { 
    phase: TEST 
    stage: "test-on-val"
    }
}


layer {
    name: "reshape"
    type: "Reshape"
    bottom: "data"
    top: "data_reshape"
    reshape_param {
        shape {
        dim: 50
        dim: 1
        dim: 39
        }
    }
}

layer {
    name: "rnn1"
    type: "RNN"
    bottom: "data_reshape"
    bottom: "clip"
    top: "ip1"
    recurrent_param {
        num_output: 60
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "gaussian"
            std: 0.01
        }
    }
    rnn_param{
        output_nonlinearity: "ReLU"
    }
}

#layer {
#    name: "relu1"
#    type: "ReLU"
#    bottom: "ip1"
#    top: "ip1"
#}

layer {
    name: "ip4"
    type: "InnerProduct"
    bottom: "ip1"
    top: "net_out"
    inner_product_param {
        num_output: 32
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
            #std: 0.01
        }
    }
}

layer {
    name: "loss"
    type: "EuclideanLoss"
    bottom: "net_out"
    bottom: "label"
    top: "euclidean_error"
    loss_weight: 1
    }

layer {
    name: "HDF5Output"
    type: "HDF5Output"
    bottom: "data"
    bottom: "net_out"
    bottom: "label"
    hdf5_output_param {
        file_name: "caffe/output/rnn_out.h5"
    }
    include: {
        phase: TEST
        stage: 'vis'
    }
}
